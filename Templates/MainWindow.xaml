<!--vgl. CodeBehind-->
<Window x:Class="Templates.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Templates"
        mc:Ignorable="d"
        Title="MainWindow" Height="439" Width="338"
        Topmost="True">

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <!--ControlTemplates definieren ein vollständig neues Layout für bestehende Elemente.
                        Hierbei können alle Controls und Container verwendet werden. Die Zuweisung zu den Elementen
                        erfolgt über deren Template-Property und den Key des Templates. Die Bindung von Propeties an
                        Properties des Elements erfolgt über ein TemplateBinding-->
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bdr_Tpl_Btn" BorderBrush="DeepSkyBlue" BorderThickness="2" CornerRadius="50"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                Background="{TemplateBinding Background}">
                            <!--Statt dem ContentPresenter kann z.B. ein TextBlock verwendet werden, wenn auf spezielle Eigenschaften,
                                    wie z.B. die FontSize eingegangen werden soll-->
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--Trigger definieren veränderte Properties, wenn bestimmte Zustände eintreten-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bdr_Tpl_Btn" Property="Background" Value="LightBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bdr_Tpl_Btn" Property="Background" Value="DarkBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--Standart-Background (falls im Button selbst kein Background angegegeben ist)-->
            <Setter Property="Background" Value="LightGreen"/>

        </Style>

        <!--Globales DataTemplate für Personen-Objekte-->
        <DataTemplate DataType="{x:Type local:Person}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Vorname}"/>
                <TextBlock Text=" "/>
                <TextBlock Text="{Binding Nachname}"/>
                <TextBlock Text=" "/>
                <TextBox Text="{Binding Alter}" Width="30"/>
                <Button Content="Löschen"
                        Click="Btn_Loeschen_02_Click"
                        Tag="{Binding}"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>

    <StackPanel>
        <!--Control-Template-Bsp-Button-->
        <Button Content="Klick mich!!" Height="100" Width="100" 
                x:Name="Btn_ControlTemplate" Click="Btn_ControlTemplate_Click"
                Background="Aqua"/>

        <!--DataTemplate-Bsp-->
        <ListBox x:Name="Lbx_Personen" Height="100" ItemsSource="{Binding Personenliste}"
                 SelectedValuePath="Vorname">
            <ListBox.ItemTemplate>
                <!--DataTemplates sind Vorlagen für das Layout von Items in ItemControls (z.B. ListView). Die Bindungen erfolgt an die
                    ItemSource des Zielelements per Kurzbindungen.
                    Explizit definierte DataTemplates haben Vorrang für dem globalen DataTemplate-->
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Vorname}"/>
                        <TextBlock Text=" "/>
                        <TextBlock Text="{Binding Nachname}"/>
                        <TextBlock Text="{Binding Alter, StringFormat= ({0})}"/>
                        <!--Property 'Tag' kann für jedes beliebige Objekt benutzt werden, z.B. für Zusatzinformation, Metadaten, Referenzen -->
                        <!--Kurzbindung 'Binding' ohne Propertyangabe bindet immer an das ganze Objekt (hier: die ganze Person)-->
                        <Button x:Name="Btn_Loeschen_02" Margin="2"
                                Content="Löschen" Click="Btn_Loeschen_02_Click" Tag="{Binding}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button x:Name="Btn_Neu" Content="Neue Person" Click="Btn_Neu_Click"/>
        <Button x:Name="Btn_Loeschen_01" Content="Lösche Person" Click="Btn_Loeschen_01_Click"/>
        <Separator/>

        <!--SelectedIndex gibt die Indexposition des markierten Elements zurück-->
        <TextBlock Text="{Binding SelectedIndex, ElementName=Lbx_Personen, StringFormat=SelectedIndex: {0:00.00}}"/>
        <!--SelectedItem gib das Objekt hinter dem markierten Element zurück (Hier unter Verwendung des globalen DataTemplates)-->
        <Label Content="{Binding ElementName=Lbx_Personen, Path=SelectedItem}"/>
        <!--SelectedValue gibt die in der Property SelectedValuePath im ItemControl angegebene Property zurück-->
        <TextBlock Text="{Binding ElementName=Lbx_Personen, Path=SelectedValue, StringFormat=SelectedValue: {0}}"/>

    </StackPanel>

</Window>
